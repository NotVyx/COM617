terraform {
  required_providers {
    aws = {
      source  = "hashicorp/aws"
      version = "~> 5.0"
    }
  }
}

provider "aws" {
  region = "eu-west-2" # London region
}

# Create VPC
resource "aws_vpc" "main" {
  cidr_block = "10.0.0.0/16"
}

# Create Public Subnet
resource "aws_subnet" "public" {
  vpc_id                  = aws_vpc.main.id
  cidr_block              = "10.0.1.0/24"
  map_public_ip_on_launch = true
}

# Security Group for EC2
resource "aws_security_group" "ec2_sg" {
  vpc_id = aws_vpc.main.id

  ingress {
    from_port   = 22
    to_port     = 22
    protocol    = "tcp"
    cidr_blocks = ["0.0.0.0/0"] # SSH
  }
  ingress {
    from_port   = 30080
    to_port     = 30080
    protocol    = "tcp"
    cidr_blocks = ["0.0.0.0/0"] # OpenNMS Web UI
  }
  egress {
    from_port   = 0
    to_port     = 0
    protocol    = "-1"
    cidr_blocks = ["0.0.0.0/0"]
  }
}

# EC2 Instance
resource "aws_instance" "opennms" {
  ami             = "ami-02df9ea15c1778c9c" # Ubuntu 22.04 in eu-west-2
  instance_type   = "t2.micro"
  subnet_id       = aws_subnet.public.id
  security_groups = [aws_security_group.ec2_sg.name]
  key_name        = "my-key" # Ensure you have an AWS key pair

  user_data = <<-EOF
              #!/bin/bash
              set -e
              sudo apt update -y
              sudo apt install -y curl
              
              # Install k3s (lightweight Kubernetes)
              curl -sfL https://get.k3s.io | sh -
              
              # Deploy OpenNMS in Kubernetes
              sudo k3s kubectl apply -f https://raw.githubusercontent.com/OpenNMS/opennms-helm-charts/main/opennms-k8s.yaml
              
              echo "Kubernetes and OpenNMS setup complete"
              EOF
}

# Fetch RDS password from AWS Secrets Manager
data "aws_secretsmanager_secret_version" "db_password" {
  secret_id = "opennms-db-password"
}

# RDS Security Group (Restrict to EC2 only)
resource "aws_security_group" "rds_sg" {
  vpc_id = aws_vpc.main.id

  ingress {
    from_port   = 5432
    to_port     = 5432
    protocol    = "tcp"
    cidr_blocks = ["${aws_instance.opennms.private_ip}/32"] # Allow only EC2 access
  }
}

# RDS Subnet Group
resource "aws_db_subnet_group" "rds_subnet" {
  name       = "rds-subnet-group"
  subnet_ids = [aws_subnet.public.id]
}

# RDS PostgreSQL Instance
resource "aws_db_instance" "opennms_db" {
  identifier            = "opennms-db"
  engine               = "postgres"
  instance_class       = "db.t3.micro"
  allocated_storage    = 20
  username            = "opennms"
  password            = data.aws_secretsmanager_secret_version.db_password.secret_string
  publicly_accessible  = false
  skip_final_snapshot  = true
  vpc_security_group_ids = [aws_security_group.rds_sg.id]
  db_subnet_group_name  = aws_db_subnet_group.rds_subnet.name
}

# Outputs
output "ec2_public_ip" {
  value = aws_instance.opennms.public_ip
}

output "rds_endpoint" {
  value = aws_db_instance.opennms_db.endpoint
}
