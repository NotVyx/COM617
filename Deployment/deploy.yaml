apiVersion: v1
kind: Namespace
metadata:
  name: default
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: traefik
rules:
- apiGroups:
  - ""
  resources:
  - services
  - secrets
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - list
  - watch
- apiGroups:
  - extensions
  - networking.k8s.io
  resources:
  - ingresses
  - ingressclasses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - extensions
  - networking.k8s.io
  resources:
  - ingresses/status
  verbs:
  - update
- apiGroups:
  - traefik.io
  resources:
  - middlewares
  - middlewaretcps
  - ingressroutes
  - traefikservices
  - ingressroutetcps
  - ingressrouteudps
  - tlsoptions
  - tlsstores
  - serverstransports
  - serverstransporttcps
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: traefik-role-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: traefik-role
subjects:
- kind: ServiceAccount
  name: traefik-account
  namespace: default
---
apiVersion: v1
data:
  GIT_BRANCH: main
  GIT_HOST: github.com
  GIT_REPO: NotVyx/COM617-Config
  JAVA_OPTS: -Xmx2048m -XX:MaxMetaspaceSize=512m -agentlib:jdwp=transport=dt_socket,server=y,address=*:8001,suspend=n
  OPENNMS_DBNAME: opennms
  OPENNMS_DBPASS: 0p3nNM5
  OPENNMS_DBUSER: opennms
  OPENNMS_TIMESERIES_STRATEGY: rrd
  POSTGRES_HOST: 172.16.15.178
  POSTGRES_PASSWORD: 0p3nNM5
  POSTGRES_PORT: "5432"
  POSTGRES_USER: opennms
  SERVICE_NAME: hzn-core
  TZ: Europe/London
kind: ConfigMap
metadata:
  name: hzn-core-config
  namespace: default
---
apiVersion: v1
kind: Service
metadata:
  name: grafana
  namespace: default
spec:
  ports:
  - name: grafana
    port: 3000
    protocol: TCP
    targetPort: 3000
  selector:
    app: grafana
  sessionAffinity: None
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: hzn-core
  name: hzn-core-grpc-tcp
  namespace: default
spec:
  ports:
  - name: grpc
    port: 8990
    protocol: TCP
    targetPort: 8990
  selector:
    app: hzn-core
  type: LoadBalancer
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: hzn-core
  name: hzn-core-karaf-tcp
  namespace: default
spec:
  ports:
  - name: karaf
    port: 8101
  selector:
    app: hzn-core
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: hzn-core
  name: hzn-core-webapp-tcp
  namespace: default
spec:
  ports:
  - name: webapp
    port: 8980
    protocol: TCP
    targetPort: 8980
  selector:
    app: hzn-core
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: traefik
  namespace: default
spec:
  ports:
  - name: web
    port: 80
    protocol: TCP
    targetPort: 80
  - name: websecure
    port: 443
    protocol: TCP
    targetPort: 443
  selector:
    app: traefik
  type: LoadBalancer
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: grafana-pvc
  namespace: default
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  storageClassName: local-path
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    app: hzn-core
    tier: storage
  name: hzn-data
  namespace: default
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
  storageClassName: local-path
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    app: hzn-core
    tier: storage
  name: hzn-deploy
  namespace: default
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
  storageClassName: local-path
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    app: hzn-core
    tier: storage
  name: hzn-fs
  namespace: default
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
  storageClassName: local-path
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    app: hzn-core
    tier: storage
  name: hzn-imports
  namespace: default
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
  storageClassName: local-path
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    app: hzn-core
    tier: storage
  name: hzn-logs
  namespace: default
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
  storageClassName: local-path
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    app: hzn-core
    tier: storage
  name: hzn-overlay
  namespace: default
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
  storageClassName: local-path
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: grafana
  name: grafana
  namespace: default
spec:
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      containers:
      - image: grafana/grafana:latest
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          tcpSocket:
            port: 3000
          timeoutSeconds: 1
        name: grafana
        ports:
        - containerPort: 3000
          name: http-grafana
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /robots.txt
            port: 3000
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 2
        resources:
          requests:
            cpu: 250m
            memory: 750Mi
        volumeMounts:
        - mountPath: /var/lib/grafana
          name: grafana-pv
      securityContext:
        fsGroup: 472
        supplementalGroups:
        - 0
      volumes:
      - name: grafana-pv
        persistentVolumeClaim:
          claimName: grafana-pvc
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: traefik
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: traefik
  template:
    metadata:
      labels:
        app: traefik
    spec:
      containers:
      - args:
        - --api.insecure=true
        - --providers.kubernetesingress
        - --entrypoints.web.address=:80
        - --entrypoints.web.http.redirections.entryPoint.to=websecure
        - --entrypoints.websecure.address=:443
        image: traefik:v3.3
        name: traefik
        ports:
        - containerPort: 80
          name: web
        - containerPort: 443
          name: websecure
        securityContext:
          capabilities:
            add:
            - NET_BIND_SERVICE
            drop:
            - ALL
      serviceAccountName: traefik-account
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app: hzn-core
  name: hzn-core
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: hzn-core
  serviceName: hzn-core
  template:
    metadata:
      labels:
        app: hzn-core
    spec:
      containers:
      - args:
        - -s
        envFrom:
        - configMapRef:
            name: hzn-core-config
        image: docker.io/opennms/horizon:33.1.3
        imagePullPolicy: IfNotPresent
        name: hzn-core
        ports:
        - containerPort: 8101
          name: karaf
        - containerPort: 8990
          name: grpc
        - containerPort: 8980
          name: webapp
        resources:
          limits:
            cpu: "4"
            memory: 8Gi
          requests:
            cpu: "2"
            memory: 6Gi
        volumeMounts:
        - mountPath: /opt/opennms/logs
          name: logs
        - mountPath: /opt/opennms-overlay
          name: overlay
        - mountPath: /opt/opennms/share/rrd
          name: rrd
        - mountPath: /opt/opennms/deploy
          name: deploy
        - mountPath: /opt/opennms/etc/imports
          name: imports
        - mountPath: /opt/opennms/etc/foreign-sources
          name: fs
      initContainers:
      - command:
        - /init.sh
        envFrom:
        - configMapRef:
            name: hzn-core-config
        image: quay.io/labmonkeys/git:2.45.2.b3360
        name: init-overlay-config
        volumeMounts:
        - mountPath: /data/opennms-overlay
          name: overlay
      securityContext:
        fsGroup: 10001
        sysctls:
        - name: net.ipv4.ping_group_range
          value: 0 10001
      terminationGracePeriodSeconds: 120
      volumes:
      - name: logs
        persistentVolumeClaim:
          claimName: hzn-logs
          readOnly: false
      - name: overlay
        persistentVolumeClaim:
          claimName: hzn-overlay
          readOnly: false
      - name: rrd
        persistentVolumeClaim:
          claimName: hzn-data
          readOnly: false
      - name: deploy
        persistentVolumeClaim:
          claimName: hzn-deploy
          readOnly: false
      - name: imports
        persistentVolumeClaim:
          claimName: hzn-imports
          readOnly: false
      - name: fs
        persistentVolumeClaim:
          claimName: hzn-fs
          readOnly: false
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: traefik-http
  namespace: default
spec:
  entryPoints:
  - web
  routes:
  - kind: Rule
    match: Host(`onms.forrest.one`)
    services:
    - name: hzn-core-webapp-tcp
      port: 8980
  - kind: Rule
    match: Host(`grafana.forrest.one`)
    services:
    - name: grafana
      port: 3000
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  annotations:
    traefik.ingress.kubernetes.io/router.entrypoints: websecure
    traefik.ingress.kubernetes.io/router.tls: "true"
  name: traefik-https
  namespace: default
spec:
  entryPoints:
  - websecure
  routes:
  - kind: Rule
    match: Host(`onms.forrest.one`)
    services:
    - name: hzn-core-webapp-tcp
      port: 8980
  - kind: Rule
    match: Host(`grafana.forrest.one`)
    services:
    - name: grafana
      port: 3000
  tls:
    secretName: onms-forrest-one-cert
apiVersion: v1
kind: Namespace
metadata:
  name: default
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: traefik
rules:
- apiGroups:
  - ""
  resources:
  - services
  - secrets
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - list
  - watch
- apiGroups:
  - extensions
  - networking.k8s.io
  resources:
  - ingresses
  - ingressclasses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - extensions
  - networking.k8s.io
  resources:
  - ingresses/status
  verbs:
  - update
- apiGroups:
  - traefik.io
  resources:
  - middlewares
  - middlewaretcps
  - ingressroutes
  - traefikservices
  - ingressroutetcps
  - ingressrouteudps
  - tlsoptions
  - tlsstores
  - serverstransports
  - serverstransporttcps
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: traefik-role-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: traefik-role
subjects:
- kind: ServiceAccount
  name: traefik-account
  namespace: default
---
apiVersion: v1
data:
  GIT_BRANCH: main
  GIT_HOST: github.com
  GIT_REPO: NotVyx/COM617-Config
  JAVA_OPTS: -Xmx2048m -XX:MaxMetaspaceSize=512m -agentlib:jdwp=transport=dt_socket,server=y,address=*:8001,suspend=n
  OPENNMS_DBNAME: opennms
  OPENNMS_DBPASS: 0p3nNM5
  OPENNMS_DBUSER: opennms
  OPENNMS_TIMESERIES_STRATEGY: rrd
  POSTGRES_HOST: 172.16.15.178
  POSTGRES_PASSWORD: 0p3nNM5
  POSTGRES_PORT: "5432"
  POSTGRES_USER: opennms
  SERVICE_NAME: hzn-core
  TZ: Europe/London
kind: ConfigMap
metadata:
  name: hzn-core-config
  namespace: default
---
apiVersion: v1
kind: Service
metadata:
  name: grafana
  namespace: default
spec:
  ports:
  - name: grafana
    port: 3000
    protocol: TCP
    targetPort: 3000
  selector:
    app: grafana
  sessionAffinity: None
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: hzn-core
  name: hzn-core-grpc-tcp
  namespace: default
spec:
  ports:
  - name: grpc
    port: 8990
    protocol: TCP
    targetPort: 8990
  selector:
    app: hzn-core
  type: LoadBalancer
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: hzn-core
  name: hzn-core-karaf-tcp
  namespace: default
spec:
  ports:
  - name: karaf
    port: 8101
  selector:
    app: hzn-core
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: hzn-core
  name: hzn-core-webapp-tcp
  namespace: default
spec:
  ports:
  - name: webapp
    port: 8980
    protocol: TCP
    targetPort: 8980
  selector:
    app: hzn-core
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: traefik
  namespace: default
spec:
  ports:
  - name: web
    port: 80
    protocol: TCP
    targetPort: 80
  - name: websecure
    port: 443
    protocol: TCP
    targetPort: 443
  selector:
    app: traefik
  type: LoadBalancer
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: grafana-pvc
  namespace: default
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  storageClassName: local-path
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    app: hzn-core
    tier: storage
  name: hzn-data
  namespace: default
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
  storageClassName: local-path
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    app: hzn-core
    tier: storage
  name: hzn-deploy
  namespace: default
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
  storageClassName: local-path
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    app: hzn-core
    tier: storage
  name: hzn-fs
  namespace: default
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
  storageClassName: local-path
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    app: hzn-core
    tier: storage
  name: hzn-imports
  namespace: default
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
  storageClassName: local-path
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    app: hzn-core
    tier: storage
  name: hzn-logs
  namespace: default
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
  storageClassName: local-path
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    app: hzn-core
    tier: storage
  name: hzn-overlay
  namespace: default
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
  storageClassName: local-path
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: grafana
  name: grafana
  namespace: default
spec:
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      containers:
      - image: grafana/grafana:latest
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          tcpSocket:
            port: 3000
          timeoutSeconds: 1
        name: grafana
        ports:
        - containerPort: 3000
          name: http-grafana
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /robots.txt
            port: 3000
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 2
        resources:
          requests:
            cpu: 250m
            memory: 750Mi
        volumeMounts:
        - mountPath: /var/lib/grafana
          name: grafana-pv
      securityContext:
        fsGroup: 472
        supplementalGroups:
        - 0
      volumes:
      - name: grafana-pv
        persistentVolumeClaim:
          claimName: grafana-pvc
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: traefik
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: traefik
  template:
    metadata:
      labels:
        app: traefik
    spec:
      containers:
      - args:
        - --api.insecure=true
        - --providers.kubernetesingress
        - --entrypoints.web.address=:80
        - --entrypoints.web.http.redirections.entryPoint.to=websecure
        - --entrypoints.websecure.address=:443
        image: traefik:v3.3
        name: traefik
        ports:
        - containerPort: 80
          name: web
        - containerPort: 443
          name: websecure
        securityContext:
          capabilities:
            add:
            - NET_BIND_SERVICE
            drop:
            - ALL
      serviceAccountName: traefik-account
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app: hzn-core
  name: hzn-core
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: hzn-core
  serviceName: hzn-core
  template:
    metadata:
      labels:
        app: hzn-core
    spec:
      containers:
      - args:
        - -s
        envFrom:
        - configMapRef:
            name: hzn-core-config
        image: docker.io/opennms/horizon:33.1.3
        imagePullPolicy: IfNotPresent
        name: hzn-core
        ports:
        - containerPort: 8101
          name: karaf
        - containerPort: 8990
          name: grpc
        - containerPort: 8980
          name: webapp
        volumeMounts:
        - mountPath: /opt/opennms/logs
          name: logs
        - mountPath: /opt/opennms-overlay
          name: overlay
        - mountPath: /opt/opennms/share/rrd
          name: rrd
        - mountPath: /opt/opennms/deploy
          name: deploy
        - mountPath: /opt/opennms/etc/imports
          name: imports
        - mountPath: /opt/opennms/etc/foreign-sources
          name: fs
      initContainers:
      - command:
        - /init.sh
        envFrom:
        - configMapRef:
            name: hzn-core-config
        image: quay.io/labmonkeys/git:2.45.2.b3360
        name: init-overlay-config
        volumeMounts:
        - mountPath: /data/opennms-overlay
          name: overlay
      securityContext:
        fsGroup: 10001
        sysctls:
        - name: net.ipv4.ping_group_range
          value: 0 10001
      terminationGracePeriodSeconds: 120
      volumes:
      - name: logs
        persistentVolumeClaim:
          claimName: hzn-logs
          readOnly: false
      - name: overlay
        persistentVolumeClaim:
          claimName: hzn-overlay
          readOnly: false
      - name: rrd
        persistentVolumeClaim:
          claimName: hzn-data
          readOnly: false
      - name: deploy
        persistentVolumeClaim:
          claimName: hzn-deploy
          readOnly: false
      - name: imports
        persistentVolumeClaim:
          claimName: hzn-imports
          readOnly: false
      - name: fs
        persistentVolumeClaim:
          claimName: hzn-fs
          readOnly: false
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: traefik-http
  namespace: default
spec:
  entryPoints:
  - web
  routes:
  - kind: Rule
    match: Host(`onms.forrest.one`)
    services:
    - name: hzn-core-webapp-tcp
      port: 8980
  - kind: Rule
    match: Host(`grafana.forrest.one`)
    services:
    - name: grafana
      port: 3000
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  annotations:
    traefik.ingress.kubernetes.io/router.entrypoints: websecure
    traefik.ingress.kubernetes.io/router.tls: "true"
  name: traefik-https
  namespace: default
spec:
  entryPoints:
  - websecure
  routes:
  - kind: Rule
    match: Host(`onms.forrest.one`)
    services:
    - name: hzn-core-webapp-tcp
      port: 8980
  - kind: Rule
    match: Host(`grafana.forrest.one`)
    services:
    - name: grafana
      port: 3000
  tls:
    secretName: onms-forrest-one-cert
